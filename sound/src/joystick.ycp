/**
 *
 * File:
 *   joystick.ycp
 *
 * Module:
 *   Sound
 *
 * Authors:
 *   Dan Meszaros <dmeszar@suse.cz>
 *   Ladislav Slezak <lslezak@suse.cz>
 *
 * YaST2 joystick configuration client
 *
 */

{

    textdomain "sound";

    import "Joystick";
    import "Label";
    import "Mode";
    import "Popup";
    import "Progress";
    import "Sequencer";
    import "Sound";
    import "Wizard";
    import "CommandLine";

    include "sound/joy_dialog.ycp";
    include "sound/write_routines.ycp";

    // abort block for read/write dialogs
    block<boolean> abort_block = ``{ return false; };

    /**
     * Save to joystick option to the sound card module
     */
    define boolean save_sound_card_joy_config () ``{

	// save modules_conf now
	SaveModulesOptions (Sound::modules_conf);
	return (boolean) SCR::Write (.modprobe_sound, nil);
    }

    /**
     * Display joystick configuration - the main dialog
     * @return symbol Symbol of pressed button
     */
    define symbol joystick_configuration() ``{
	return joystick_overview();
    }

    /**
     * Save joystick configuration
     * @return symbol Return `next (for wizard sequencer)
     */
    define symbol saveconfig() ``{
	Joystick::Write (abort_block);
	// Save possible changed sound configuration
	// Only when joystick client is run stand alone! Otherwise it is saved
	// by sound module!
	if (Sound::Changed ())
	{
	    save_sound_card_joy_config ();
	}
	return `next;
    }

    // revert the joystick configuration back to the original state after pressing Abort
    symbol revert_config()
    {
	if (Joystick::Changed())
	{
	    y2milestone("Reverting joystick configuration");
	    Joystick::Revert();

	    saveconfig();
	}

	// the Abort button has been pressed, just pass it further
	return `abort;
    }


    /**********************  MAIN  ************************/
    symbol StartGUI()
    {
	// sequence of dialogs
	map sequence = $[
	    "ws_start" : "config",

	    "config" : $[
		`next	: "save",
		`abort	: "revert",
	    ],

	    "save" : $[
		`next	: `ws_finish
	    ],

	    "revert" : $[
		`abort	: `abort
	    ]
	];

	// aliases for dialogs
	map aliases = $[
	    "config"	: ``(joystick_configuration()),
	    "save"	: ``(saveconfig()),
	    "revert"	: ``(revert_config())
	];

	// create wizard dialog
	Wizard::CreateDialog();
	Wizard::SetDesktopTitleAndIcon("joystick");

	// read sound card configuration
	boolean progress_orig = Progress::set(false);

	if (!Sound::Read(false))
	    return `abort;

	Sound::StoreSettings ();

	Progress::set(progress_orig);

	// read joystick configuration
	Joystick::Read(abort_block);

	y2debug("Read joystick configuration: %1", Joystick::joystick);

	// start wizard sequencer
	Sequencer::Run (aliases, sequence);

	// close dialog
	Wizard::CloseDialog();
    }



    map cmdline_description = $[
	"id"	: "joystick",
	"guihandler"        : StartGUI,
    ];

    return CommandLine::Run(cmdline_description);

}//EOF
