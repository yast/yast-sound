# Joystick configuration
#
# Author: Takashi Iwai
#


Joystick support on ALSA
========================

Here is a summary for the latest ALSA 0.9.0 and 2.4 kernel.
Joystick can work on most of the drivers fine.

Basically, the joystick support is done in the following procedure:

1. easy one

Joystick on most of isa (pnp) cards is independent from sound drivers,
and can be initialized as an individual logical device via isa pnp.
So, we can load the three modules at any time.

	- joydev
	- ns558
	- analog (or whatever)

BTW, the joystick must be connected at the time ns558 (and analog)
module is loaded. Otherwise the driver cannot detect the device.
This should be mentioned in the yast2 dialog..

2. enabled via ALSA control

On some cards, joystick must be activated by the sound driver. Some alsa
drivers have function to configure it on the fly via control API. until now,
there is no program which can change a single control element directly. So far
we need to call "alsactl store" and modify /etc/asound.state, then restore via
"alsactl restore". I can write a better one in future, such like "alsactl set
Joystick true".
	
the following cards need this kind of initialization:

  - cmipci
  - es1968
	these cards have "Joysrick" control (boolean).
	the ports are legacy, so we need to load joydev, ns558 and
	analog after activating joystick.

  - ens1370
	the card has "Joystick Enable" control (boolean).
	this needs ns558, too.

  - ens1371
	the card has "Joystick Enable" control (boolean), and
	"Joystick Address" control (integer).
	"Joystick Address" can be changed through control API.
	for this, we'll need ns558, too.

3. enabled via module option

  - ymfpci
	the card needs a proper joystick address passed via
	snd_joystick_port option.
	only 0x201, 202, 204 and 205 are available.
	then, load joydev, ns558 and analog modules.

  - als4000
	the card has also snd_joystick_port option, but
	as default already initialized as 0x200.
	the values are arbitrary.
	this requires ns558, too.

  - via686a
	the card has snd_joystick option (boolean).
	simply give snd_joystick=1 then load ns558 and others.

4. built-in gameport support

The following drivers have built-in gameport support.
That means, we don't use ns558 module. Only joydev and analog are
needed. The joystick must be connected at the time analog module is
loaded.

  - sonicvibes
  - es1938
  - cs4281

5. extra module

on some pci cards, joystick work without sound driver, but needs an
extra module for gameport.

  - emu10k1
	load emu10k1-gp module instead of ns558

  - cs46xx
	load cs461x module instead of ns558
	(i can build this stuff into ALSA driver.. but not sure
	 wheter it makes sense.)

  - trident
  - aureal
	load pcigame module instead of ns558



Starting joystick
=================

I added joystick init script in alsa package. It reads /etc/sysconfig/joystick
and configures ALSA and loads the necessary modules.

The configuration would be done simply on yast2.

For example, the following configuration is for:
joy1: normal isa-pnp soundcard
joy2: sb live!
joy3: ens1371 card
joy4: ess solo1 (es1938)

(Note: ess1938 doesn't need gameport module since it has built-in
 gameport support.)

================================================================
#
# Gameport module names
# (typically "ns558" for legacy gameport support)
#
JS_GAMEPORT_MODULE_0="ns558"
JS_GAMEPORT_MODULE_1="emu10k1-gp"
JS_GAMEPORT_MODULE_2="ns558"
JS_GAMEPORT_MODULE_3=""
#
# Joystick module names
# (typically "analog")
#
JS_DEVICE_MODULE_0="analog"
JS_DEVICE_MODULE_1="analog"
JS_DEVICE_MODULE_2="analog"
JS_DEVICE_MODULE_3="analog"
#
# Joystick module options
# (e.g. "js=gameport" for analog)
#
JS_DEVICE_MODULE_OPTION_0=""
JS_DEVICE_MODULE_OPTION_1=""
JS_DEVICE_MODULE_OPTION_2=""
JS_DEVICE_MODULE_OPTION_3=""
#
# Control name of sound driver to activate (via alsactl)
# e.g. "yes" (alias "Joystick") or "Joystick Enable"
#
JS_CONTROL_0=""
JS_CONTROL_1=""
JS_CONTROL_2="Joystick Enable"
JS_CONTROL_3=""
#
# Port to be used (via alsactl)
# Some soundcard like ens1371 needs the port address (typically 0x200)
#
JS_PORT_0=""
JS_PORT_1=""
JS_PORT_2="0x200"
JS_PORT_3=""
================================================================

JS_GAMEPORT_MODULE, JS_CONTROL and JS_PORT will be automatically determined
from the soundcard database. JS_DEVICE_MODULE should be chosable during
configuration, e.g. from the list of joystick types.

An annoying issue is that currently the joystick _must_ be connected when the
joystick device module such as analog is loaded. The module tries to probe the
device automatically, so if not found at this time it fails. That's true also
on yast2. We need to put a dialog to ask whether the user really connected a
joystick before trying to load the joystick module.



Testing joystick
================

  Use:

     /usr/bin/jstest /dev/input/js[0-3]

  to test joystick configuration.

